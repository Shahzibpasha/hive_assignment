1. Download vechile sales data -> https://github.com/shashank-mishra219/Hive-Class/blob/main/sales_order_data.csv

2. Store raw data into hdfs location
  Two steps done to store the file:
  i) Create a directory in neuro lab: hdfs dfs -mkdir /hive_assgn3
  ii) put the sales_order_data.csv in the directory created: hdfs dfs -put sales_order_data.csv /hive_assgn3

3. Create a internal hive table "sales_order_csv" which will store csv data sales_order_csv .. make sure to skip header row while creating table:
  hive> create table sales_order_data_csv
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > row format delimited
    > fields terminated by ','
    > tblproperties("skip.header.line.count"="1");

4. Load data from hdfs path into "sales_order_csv":
  hive> load data inpath '/hive_assgn3/sales_order_data.csv' into table sales_order_data_csv;

5. Create an internal hive table which will store data in ORC format "sales_order_orc":
  hive> create table sales_order_data_orc
    > (
    > ORDERNUMBER int,
    > QUANTITYORDERED int,
    > PRICEEACH float,
    > ORDERLINENUMBER int,
    > SALES float,
    > STATUS string,
    > QTR_ID int,
    > MONTH_ID int,
    > YEAR_ID int,
    > PRODUCTLINE string,
    > MSRP int,
    > PRODUCTCODE string,
    > PHONE string,
    > CITY string,
    > STATE string,
    > POSTALCODE string,
    > COUNTRY string,
    > TERRITORY string,
    > CONTACTLASTNAME string,
    > CONTACTFIRSTNAME string,
    > DEALSIZE string
    > )
    > stored as orc;
    

6. Load data from "sales_order_csv" into "sales_order_orc"
  hive> from sales_order_data_csv insert overwrite table sales_order_data_orc select *;

Perform below menioned queries on "sales_order_orc" table :

a. Calculatye total sales per year:
  select sum(sales) as total_sales,year_id as year
  from sales_order_data_orc
  group by year_id;
  
b. Find a product for which maximum orders were placed:
  select PRODUCTLINE 
  from (select sum(QUANTITYORDERED) as total_ordered, productline 
  from sales_order_data_orc group by productline 
  order by desc limit 1) tb;
  
c. Calculate the total sales for each quarter:
  select sum(sales) as total_sales,QTR_ID as sales_quarter
  from sales_order_data_orc
  group by QTR_ID;

d. In which quarter sales was minimum:
  select QTR_ID as sales_quarter 
  from (select sum(sales) as total_sales, QTR_ID 
  from sales_order_data_orc group by QTR_ID 
  order by total_sales) tb limit 1;
  
e. In which country sales was maximum and in which country sales was minimum:
  hive> select country,total_sales from (select sum(sales) as total_sales, country from sales_order_data_orc group by country order by total_sales desc limit 1) tb1
union
select country,total_sales from (select sum(sales) as total_sales, country from sales_order_data_orc group by country order by total_sales limit 1) tb2;

f. Calculate quartelry sales for each city:
select sum(sales) as quart_sales,QTR_ID,city from sales_order_data_orc group by city,QTR_ID;

h. Find a month for each year in which maximum number of quantities were sold:
  hive> select q2.month_id,q2.year_id from sales_order_data_orc q2 where q2.sales in (select max(q1.sales) as sales     from sales_order_data_orc q1 group by q1.year_id);
